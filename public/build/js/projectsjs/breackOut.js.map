{"version":3,"file":"breackOut.js","names":["canvas","ctx","x","y","dx","dy","paddleX","ballRadius","paddleHeight","paddleWidth","rightPressed","leftPressed","brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetTop","brickOffsetLeft","bricks","c","r","status","score","lives","startBreakoutGame","canvasId","document","getElementById","getContext","width","height","style","display","addEventListener","keyDownHandler","keyUpHandler","draw","e","key","drawBall","beginPath","arc","Math","PI","fillStyle","fill","closePath","drawPaddle","rect","drawBricks","brickX","brickY","drawScore","font","fillText","drawLives","collisionDetection","b","alert","location","reload","clearRect","requestAnimationFrame"],"sources":["projectsjs/breackOut.js"],"mappings":"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","sourcesContent":["// Variables globales\r\nvar canvas;\r\nvar ctx;\r\n\r\nvar ballRadius = 10;\r\nvar x;\r\nvar y;\r\nvar dx;\r\nvar dy;\r\n\r\nvar paddleHeight = 10;\r\nvar paddleWidth = 75;\r\nvar paddleX;\r\nvar rightPressed = false;\r\nvar leftPressed = false;\r\n\r\nvar brickRowCount = 3;\r\nvar brickColumnCount = 5;\r\nvar brickWidth = 75;\r\nvar brickHeight = 20;\r\nvar brickPadding = 10;\r\nvar brickOffsetTop = 30;\r\nvar brickOffsetLeft = 30;\r\nvar bricks = [];\r\nfor (var c = 0; c < brickColumnCount; c++) {\r\n  bricks[c] = [];\r\n  for (var r = 0; r < brickRowCount; r++) {\r\n    bricks[c][r] = { x: 0, y: 0, status: 1 };\r\n  }\r\n}\r\n\r\nvar score = 0;\r\nvar lives = 3;\r\n\r\n// Función para iniciar el juego del Breakout\r\nfunction startBreakoutGame(canvasId) {\r\n  canvas = document.getElementById(canvasId);\r\n  ctx = canvas.getContext('2d');\r\n\r\n  x = canvas.width / 2;\r\n  y = canvas.height - 30;\r\n  dx = 2;\r\n  dy = -2;\r\n  paddleX = (canvas.width - paddleWidth) / 2;\r\n\r\n  document.getElementById(\"breakOut\").style.display = \"block\";\r\n  canvas.style.display = \"block\";\r\n\r\n  // Event listeners para detectar las teclas presionadas\r\n  document.addEventListener(\"keydown\", keyDownHandler, false);\r\n  document.addEventListener(\"keyup\", keyUpHandler, false);\r\n\r\n  draw();\r\n}\r\n\r\nfunction keyDownHandler(e) {\r\n  if (e.key == \"Right\" || e.key == \"ArrowRight\") {\r\n    rightPressed = true;\r\n  } else if (e.key == \"Left\" || e.key == \"ArrowLeft\") {\r\n    leftPressed = true;\r\n  }\r\n}\r\n\r\nfunction keyUpHandler(e) {\r\n  if (e.key == \"Right\" || e.key == \"ArrowRight\") {\r\n    rightPressed = false;\r\n  } else if (e.key == \"Left\" || e.key == \"ArrowLeft\") {\r\n    leftPressed = false;\r\n  }\r\n}\r\n\r\nfunction drawBall() {\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, ballRadius, 0, Math.PI * 2);\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fill();\r\n  ctx.closePath();\r\n}\r\n\r\nfunction drawPaddle() {\r\n  ctx.beginPath();\r\n  ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fill();\r\n  ctx.closePath();\r\n}\r\n\r\nfunction drawBricks() {\r\n  for (var c = 0; c < brickColumnCount; c++) {\r\n    for (var r = 0; r < brickRowCount; r++) {\r\n      if (bricks[c][r].status == 1) {\r\n        var brickX = c * (brickWidth + brickPadding) + brickOffsetLeft;\r\n        var brickY = r * (brickHeight + brickPadding) + brickOffsetTop;\r\n        bricks[c][r].x = brickX;\r\n        bricks[c][r].y = brickY;\r\n        ctx.beginPath();\r\n        ctx.rect(brickX, brickY, brickWidth, brickHeight);\r\n        ctx.fillStyle = \"#0095DD\";\r\n        ctx.fill();\r\n        ctx.closePath();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawScore() {\r\n  ctx.font = \"16px Arial\";\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fillText(\"Score: \" + score, 8, 20);\r\n}\r\n\r\nfunction drawLives() {\r\n  ctx.font = \"16px Arial\";\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fillText(\"Lives: \" + lives, canvas.width - 65, 20);\r\n}\r\n\r\nfunction collisionDetection() {\r\n  for (var c = 0; c < brickColumnCount; c++) {\r\n    for (var r = 0; r < brickRowCount; r++) {\r\n      var b = bricks[c][r];\r\n      if (b.status == 1) {\r\n        if (\r\n          x > b.x &&\r\n          x < b.x + brickWidth &&\r\n          y > b.y &&\r\n          y < b.y + brickHeight\r\n        ) {\r\n          dy = -dy;\r\n          b.status = 0;\r\n          score++;\r\n          if (score == brickRowCount * brickColumnCount) {\r\n            alert(\"¡Has ganado!\");\r\n            document.location.reload();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction draw() {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  drawBricks();\r\n  drawBall();\r\n  drawPaddle();\r\n  drawScore();\r\n  drawLives();\r\n  collisionDetection();\r\n\r\n  // Movimiento de la paleta\r\n  if (rightPressed && paddleX < canvas.width - paddleWidth) {\r\n    paddleX += 7;\r\n  } else if (leftPressed && paddleX > 0) {\r\n    paddleX -= 7;\r\n  }\r\n\r\n  // Movimiento de la pelota\r\n  x += dx;\r\n  y += dy;\r\n\r\n  // Lógica de rebote en los bordes del canvas\r\n  if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {\r\n    dx = -dx;\r\n  }\r\n  if (y + dy < ballRadius) {\r\n    dy = -dy;\r\n  } else if (y + dy > canvas.height - ballRadius) {\r\n    if (x > paddleX && x < paddleX + paddleWidth) {\r\n      dy = -dy;\r\n    } else {\r\n      lives--;\r\n      if (!lives) {\r\n        alert(\"¡Juego terminado!\");\r\n        document.location.reload();\r\n      } else {\r\n        x = canvas.width / 2;\r\n        y = canvas.height - 30;\r\n        dx = 3;\r\n        dy = -3;\r\n        paddleX = (canvas.width - paddleWidth) / 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  requestAnimationFrame(draw);\r\n}\r\n"]}