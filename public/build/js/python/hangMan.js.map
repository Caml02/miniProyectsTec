{"version":3,"file":"hangMan.js","names":["document","addEventListener","remainingAttempts","gameOver","word","fetch","then","response","ok","json","Error","data","form","getElementById","restartButton","event","preventDefault","letterInput","letter","value","toUpperCase","method","headers","body","JSON","stringify","message","guessedLetters","guessed_letters","join","remaining_attempts","game_over","textContent","alert","disabled","catch","error","console","initializeHangman"],"sources":["python/hangMan.js"],"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIC,EAAoB,EACpBC,GAAW,EACXC,EAAO,GAEXC,MAAM,kCACHC,MAAK,SAASC,GACb,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,qCAEpB,IACCJ,MAAK,SAASK,GACbP,EAAOO,EAAKP,KAOhB,WACE,MAAMQ,EAAOZ,SAASa,eAAe,aAC/BC,EAAgBd,SAASa,eAAe,iBAE9CD,EAAKX,iBAAiB,UAAU,SAASc,GACvCA,EAAMC,iBACN,MAAMC,EAAcjB,SAASa,eAAe,eACtCK,EAASD,EAAYE,MAAMC,cACjCH,EAAYE,MAAQ,GAEhBhB,GAIJE,MAAM,8BAA+B,CACnCgB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEP,OAAQA,MAEhCZ,MAAK,SAASC,GACb,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,qCAEpB,IACCJ,MAAK,SAASK,GACb,MAAMe,EAAUf,EAAKe,QACfC,EAAiBhB,EAAKiB,gBAAgBC,KAAK,MAEjD3B,EAAoBS,EAAKmB,mBACzB3B,EAAWQ,EAAKoB,UAEhB/B,SAASa,eAAe,WAAWmB,YAAcN,EACjD1B,SAASa,eAAe,kBAAkBmB,YAAc,sBAAwBL,EAChF3B,SAASa,eAAe,qBAAqBmB,YAAc,uBAAyB9B,EAEhFC,IACwB,IAAtBD,EACF+B,MAAM,gCAAkC7B,GAExC6B,MAAM,qCAERnB,EAAcoB,UAAW,EAE7B,IACCC,OAAM,SAASC,GACdC,QAAQD,MAAM,0BAA4BA,EAAMV,QAClD,GACF,IAEAZ,EAAcb,iBAAiB,SAAS,SAASc,GAC/CA,EAAMC,iBAENX,MAAM,gCAAiC,CACrCgB,OAAQ,SAETf,MAAK,SAASC,GACb,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,qCAEpB,IACCJ,MAAK,SAASK,GACbP,EAAOO,EAAKP,KACZD,GAAW,EACXD,EAAoB,EAEpBF,SAASa,eAAe,WAAWmB,YAAc,qBACjDhC,SAASa,eAAe,kBAAkBmB,YAAc,sBACxDhC,SAASa,eAAe,qBAAqBmB,YAAc,uBAAyB9B,EACpFY,EAAcoB,UAAW,CAC3B,IACCC,OAAM,SAASC,GACdC,QAAQD,MAAM,0BAA4BA,EAAMV,QAClD,GACF,GACF,CAtFIY,EACF,IACCH,OAAM,SAASC,GACdC,QAAQD,MAAM,0BAA4BA,EAAMV,QAClD,GAmFJ","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n  let remainingAttempts = 5;\r\n  let gameOver = false;\r\n  let word = '';\r\n\r\n  fetch(\"http://localhost:5000/get_word\")\r\n    .then(function(response) {\r\n      if (response.ok) {\r\n        return response.json();\r\n      } else {\r\n        throw new Error(\"Error en la respuesta del servidor\");\r\n      }\r\n    })\r\n    .then(function(data) {\r\n      word = data.word;\r\n      initializeHangman();\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error en la solicitud: \" + error.message);\r\n    });\r\n\r\n  function initializeHangman() {\r\n    const form = document.getElementById('guessForm');\r\n    const restartButton = document.getElementById('restartButton');\r\n\r\n    form.addEventListener('submit', function(event) {\r\n      event.preventDefault();\r\n      const letterInput = document.getElementById('letterInput');\r\n      const letter = letterInput.value.toUpperCase();\r\n      letterInput.value = '';\r\n\r\n      if (gameOver) {\r\n        return;\r\n      }\r\n\r\n      fetch(\"http://localhost:5000/guess\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ letter: letter })\r\n      })\r\n      .then(function(response) {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"Error en la respuesta del servidor\");\r\n        }\r\n      })\r\n      .then(function(data) {\r\n        const message = data.message;\r\n        const guessedLetters = data.guessed_letters.join(', ');\r\n\r\n        remainingAttempts = data.remaining_attempts;\r\n        gameOver = data.game_over;\r\n\r\n        document.getElementById('message').textContent = message;\r\n        document.getElementById('guessedLetters').textContent = \"Letras adivinadas: \" + guessedLetters;\r\n        document.getElementById('remainingAttempts').textContent = \"Intentos restantes: \" + remainingAttempts;\r\n\r\n        if (gameOver) {\r\n          if (remainingAttempts === 0) {\r\n            alert(\"Has perdido. La palabra era: \" + word);\r\n          } else {\r\n            alert(\"Â¡Has adivinado la palabra oculta!\");\r\n          }\r\n          restartButton.disabled = false;\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        console.error(\"Error en la solicitud: \" + error.message);\r\n      });\r\n    });\r\n\r\n    restartButton.addEventListener('click', function(event) {\r\n      event.preventDefault();\r\n\r\n      fetch(\"http://localhost:5000/restart\", {\r\n        method: \"POST\"\r\n      })\r\n      .then(function(response) {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"Error en la respuesta del servidor\");\r\n        }\r\n      })\r\n      .then(function(data) {\r\n        word = data.word;\r\n        gameOver = false;\r\n        remainingAttempts = 5;\r\n\r\n        document.getElementById('message').textContent = \"Adivina la palabra\";\r\n        document.getElementById('guessedLetters').textContent = \"Letras adivinadas: \";\r\n        document.getElementById('remainingAttempts').textContent = \"Intentos restantes: \" + remainingAttempts;\r\n        restartButton.disabled = true;\r\n      })\r\n      .catch(function(error) {\r\n        console.error(\"Error en la solicitud: \" + error.message);\r\n      });\r\n    });\r\n  }\r\n});\r\n"]}